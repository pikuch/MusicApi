// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MusicApiData;

namespace MusicApiData.Migrations
{
    [DbContext(typeof(MusicApiDbContext))]
    partial class MusicApiDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MusicApiData.Models.Album", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("nvarchar(127)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Albums");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Title = "The Eminem Show",
                            Year = 2002
                        },
                        new
                        {
                            Id = 2L,
                            Title = "Feels So Good",
                            Year = 2002
                        },
                        new
                        {
                            Id = 3L,
                            Title = "Smash",
                            Year = 1994
                        },
                        new
                        {
                            Id = 4L,
                            Title = "The House",
                            Year = 2010
                        });
                });

            modelBuilder.Entity("MusicApiData.Models.Artist", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("nvarchar(127)");

                    b.HasKey("Id");

                    b.ToTable("Artists");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "Eminem"
                        },
                        new
                        {
                            Id = 2L,
                            Name = "Atomic Kitten"
                        },
                        new
                        {
                            Id = 3L,
                            Name = "The Offspring"
                        },
                        new
                        {
                            Id = 4L,
                            Name = "Katie Melua"
                        });
                });

            modelBuilder.Entity("MusicApiData.Models.Genre", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("nvarchar(127)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "Rap rock"
                        },
                        new
                        {
                            Id = 2L,
                            Name = "Pop"
                        },
                        new
                        {
                            Id = 3L,
                            Name = "Punk rock"
                        },
                        new
                        {
                            Id = 4L,
                            Name = "Progressive rock"
                        });
                });

            modelBuilder.Entity("MusicApiData.Models.Playlist", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("nvarchar(127)");

                    b.HasKey("Id");

                    b.ToTable("Playlists");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Created = new DateTime(2021, 5, 10, 20, 24, 1, 946, DateTimeKind.Local).AddTicks(3389),
                            Name = "Cool playlist"
                        },
                        new
                        {
                            Id = 2L,
                            Created = new DateTime(2021, 8, 18, 20, 24, 1, 959, DateTimeKind.Local).AddTicks(8339),
                            Name = "Songs to listen to"
                        },
                        new
                        {
                            Id = 3L,
                            Created = new DateTime(2021, 10, 7, 20, 24, 1, 959, DateTimeKind.Local).AddTicks(8365),
                            Name = "Music"
                        });
                });

            modelBuilder.Entity("MusicApiData.Models.PlaylistSong", b =>
                {
                    b.Property<long>("PlaylistId")
                        .HasColumnType("bigint");

                    b.Property<long>("SongId")
                        .HasColumnType("bigint");

                    b.HasKey("PlaylistId", "SongId");

                    b.HasIndex("SongId");

                    b.ToTable("PlaylistSong");

                    b.HasData(
                        new
                        {
                            PlaylistId = 1L,
                            SongId = 5L
                        },
                        new
                        {
                            PlaylistId = 1L,
                            SongId = 6L
                        },
                        new
                        {
                            PlaylistId = 1L,
                            SongId = 12L
                        },
                        new
                        {
                            PlaylistId = 2L,
                            SongId = 1L
                        },
                        new
                        {
                            PlaylistId = 2L,
                            SongId = 4L
                        },
                        new
                        {
                            PlaylistId = 2L,
                            SongId = 7L
                        },
                        new
                        {
                            PlaylistId = 2L,
                            SongId = 9L
                        },
                        new
                        {
                            PlaylistId = 2L,
                            SongId = 10L
                        },
                        new
                        {
                            PlaylistId = 2L,
                            SongId = 14L
                        },
                        new
                        {
                            PlaylistId = 3L,
                            SongId = 2L
                        },
                        new
                        {
                            PlaylistId = 3L,
                            SongId = 3L
                        },
                        new
                        {
                            PlaylistId = 3L,
                            SongId = 8L
                        },
                        new
                        {
                            PlaylistId = 3L,
                            SongId = 11L
                        },
                        new
                        {
                            PlaylistId = 3L,
                            SongId = 1L
                        },
                        new
                        {
                            PlaylistId = 3L,
                            SongId = 12L
                        },
                        new
                        {
                            PlaylistId = 3L,
                            SongId = 13L
                        });
                });

            modelBuilder.Entity("MusicApiData.Models.Song", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AlbumId")
                        .HasColumnType("bigint");

                    b.Property<long>("ArtistId")
                        .HasColumnType("bigint");

                    b.Property<long>("GenreId")
                        .HasColumnType("bigint");

                    b.Property<int>("LengthInSeconds")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("nvarchar(127)");

                    b.HasKey("Id");

                    b.HasIndex("AlbumId");

                    b.HasIndex("ArtistId");

                    b.HasIndex("GenreId");

                    b.ToTable("Songs");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            AlbumId = 1L,
                            ArtistId = 1L,
                            GenreId = 1L,
                            LengthInSeconds = 251,
                            Title = "Business"
                        },
                        new
                        {
                            Id = 2L,
                            AlbumId = 1L,
                            ArtistId = 1L,
                            GenreId = 1L,
                            LengthInSeconds = 323,
                            Title = "Square Dance"
                        },
                        new
                        {
                            Id = 3L,
                            AlbumId = 1L,
                            ArtistId = 1L,
                            GenreId = 1L,
                            LengthInSeconds = 226,
                            Title = "Soldier"
                        },
                        new
                        {
                            Id = 4L,
                            AlbumId = 1L,
                            ArtistId = 1L,
                            GenreId = 1L,
                            LengthInSeconds = 309,
                            Title = "Say What You Say"
                        },
                        new
                        {
                            Id = 5L,
                            AlbumId = 2L,
                            ArtistId = 2L,
                            GenreId = 2L,
                            LengthInSeconds = 196,
                            Title = "It's OK!"
                        },
                        new
                        {
                            Id = 6L,
                            AlbumId = 2L,
                            ArtistId = 2L,
                            GenreId = 2L,
                            LengthInSeconds = 210,
                            Title = "Feels So Good"
                        },
                        new
                        {
                            Id = 7L,
                            AlbumId = 2L,
                            ArtistId = 2L,
                            GenreId = 2L,
                            LengthInSeconds = 240,
                            Title = "Walking on the Water"
                        },
                        new
                        {
                            Id = 8L,
                            AlbumId = 3L,
                            ArtistId = 3L,
                            GenreId = 3L,
                            LengthInSeconds = 223,
                            Title = "Bad Habit"
                        },
                        new
                        {
                            Id = 9L,
                            AlbumId = 3L,
                            ArtistId = 3L,
                            GenreId = 3L,
                            LengthInSeconds = 197,
                            Title = "Come Out and Play"
                        },
                        new
                        {
                            Id = 10L,
                            AlbumId = 3L,
                            ArtistId = 3L,
                            GenreId = 3L,
                            LengthInSeconds = 642,
                            Title = "Smash"
                        },
                        new
                        {
                            Id = 11L,
                            AlbumId = 4L,
                            ArtistId = 4L,
                            GenreId = 4L,
                            LengthInSeconds = 243,
                            Title = "The Flood"
                        },
                        new
                        {
                            Id = 12L,
                            AlbumId = 4L,
                            ArtistId = 4L,
                            GenreId = 4L,
                            LengthInSeconds = 207,
                            Title = "A Happy Place"
                        },
                        new
                        {
                            Id = 13L,
                            AlbumId = 4L,
                            ArtistId = 4L,
                            GenreId = 4L,
                            LengthInSeconds = 227,
                            Title = "A Moment of Madness"
                        },
                        new
                        {
                            Id = 14L,
                            AlbumId = 4L,
                            ArtistId = 4L,
                            GenreId = 4L,
                            LengthInSeconds = 224,
                            Title = "Twisted"
                        });
                });

            modelBuilder.Entity("MusicApiData.Models.PlaylistSong", b =>
                {
                    b.HasOne("MusicApiData.Models.Playlist", "Playlist")
                        .WithMany("PlaylistSongs")
                        .HasForeignKey("PlaylistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MusicApiData.Models.Song", "Song")
                        .WithMany("PlaylistSongs")
                        .HasForeignKey("SongId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Playlist");

                    b.Navigation("Song");
                });

            modelBuilder.Entity("MusicApiData.Models.Song", b =>
                {
                    b.HasOne("MusicApiData.Models.Album", "Album")
                        .WithMany("Songs")
                        .HasForeignKey("AlbumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MusicApiData.Models.Artist", "Artist")
                        .WithMany("Songs")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MusicApiData.Models.Genre", "Genre")
                        .WithMany("Songs")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Album");

                    b.Navigation("Artist");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("MusicApiData.Models.Album", b =>
                {
                    b.Navigation("Songs");
                });

            modelBuilder.Entity("MusicApiData.Models.Artist", b =>
                {
                    b.Navigation("Songs");
                });

            modelBuilder.Entity("MusicApiData.Models.Genre", b =>
                {
                    b.Navigation("Songs");
                });

            modelBuilder.Entity("MusicApiData.Models.Playlist", b =>
                {
                    b.Navigation("PlaylistSongs");
                });

            modelBuilder.Entity("MusicApiData.Models.Song", b =>
                {
                    b.Navigation("PlaylistSongs");
                });
#pragma warning restore 612, 618
        }
    }
}
